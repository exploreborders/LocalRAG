version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: rag_system
      POSTGRES_USER: rag_user
      POSTGRES_PASSWORD: rag_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rag_user -d rag_system"]
      interval: 10s
      timeout: 5s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  rag_app:
    build: .
    ports:
      - "8501:8501"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=rag_system
      - POSTGRES_USER=rag_user
      - POSTGRES_PASSWORD=rag_password
      - OPENSEARCH_HOST=elasticsearch
      - OPENSEARCH_PORT=9200
      - OPENSEARCH_USER=elastic
      - OPENSEARCH_PASSWORD=changeme
    depends_on:
      postgres:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/rag_env
    command: streamlit run web_interface/app.py --server.port 8501 --server.address 0.0.0.0

volumes:
  postgres_data:
  elasticsearch_data: